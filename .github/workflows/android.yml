name: Android CI

on:
  push:
    branches:
      - main  # Adjust branch name if necessary
  pull_request:
    branches:
      - main  # Adjust branch name if necessary
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app-folder: [birthday_card, business_card, calculate_tip_app, composable_basics_2, dice_roller, jetpack_compose_tutorial, lemonade_app]

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: gradle

    - name: Install Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 30
        build-tools: 30.0.3

    - name: Check if App Changed
      id: check_changes
      run: |
        if git diff --name-only origin/main... | grep -q "^${{ matrix.app-folder }}/"; then
          echo "::set-output name=build::true"
        else
          echo "::set-output name=build::false"
        fi

    - name: Skip unchanged apps
      if: steps.check_changes.outputs.build == 'false'
      run: echo "No changes in ${{ matrix.app-folder }}, skipping build."

    - name: Grant execute permission for gradlew
      run: chmod +x ${{ matrix.app-folder }}/gradlew

    - name: Build with Gradle
      run: |
        cd ${{ matrix.app-folder }}
        ./gradlew assembleDebug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      if: steps.check_changes.outputs.build == 'true'
      with:
        name: ${{ matrix.app-folder }}-debug-apk
        path: ${{ matrix.app-folder }}/app/build/outputs/apk/debug/app-debug.apk

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: 'latest'
        release_name: 'Latest Release - ${{ github.run_id }}'
        draft: false
        prerelease: false

    - name: Download APK Artifacts
      uses: actions/download-artifact@v3
      with:
        name: '*-debug-apk'
        path: dist/

    - name: Rename and Upload Release Assets
      run: |
        for apk in dist/*/debug/app-debug.apk; do
          app_name=$(basename $(dirname $(dirname $apk)))
          mv $apk dist/${app_name}-debug.apk
        done
      if: always()

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/*.apk
        asset_name: ${{ github.run_id }}_APKs.zip
        asset_content_type: application/zip
